version: '3.8'
services:

  db:
    image: postgres:latest
    env_file:
      - "./.env"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -q -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - db_datas:/var/lib/postgresql/data/
    restart: always


  backend:
    build: app
    env_file:
      - "./.env"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - static_value:/opt/app/static
      - media_value:/opt/app/media
    entrypoint: [ "sh", "docker-entrypoint.sh" ]
    restart: always

  es:
    image: elasticsearch:7.17.8
    ports:
      - "9200:9200"
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xmx512m -Xms512m"
    depends_on:
      - backend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://${ELASTIC_HOST}:${ELASTIC_PORT}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - es_datas:/usr/share/elasticsearch/data
    restart: always



  etl:
    build: postgres_to_es
    env_file:
      - "./.env"
    depends_on:
      es:
        condition: service_healthy
    volumes:
      - checkpoint:/opt/etl/results
    entrypoint: [ "bash", "./docker-entrypoint.sh" ]
    restart: always

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    depends_on:
      - etl
    volumes:
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./etc/nginx/conf.d/site.conf:/etc/nginx/conf.d/default.conf:ro
      - checkpoint:/var/html/etl_value/
      - static_value:/var/html/static/
      - media_value:/var/html/media/

volumes:
  db_datas:
  es_datas:
  checkpoint:
  static_value:
  media_value:
